// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String    @id @default(cuid())
  name               String?
  email              String?   @unique
  emailVerified      DateTime?
  image              String?
  accounts           Account[]
  sessions           Session[]
  // Stripe subscription fields - all optional or with defaults
  stripeCustomerId   String?
  stripePriceId      String?
  stripeSubscriptionId String?
  subscriptionStatus String    @default("FREE") 
  subscriptionPeriodStart DateTime?
  subscriptionPeriodEnd DateTime?
  overrideAccess     Boolean   @default(false)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Job {
  id          String   @id @default(cuid())
  title       String
  company     String
  location    String
  description String   
  url         String
  source      String
  postedAt    DateTime
  salary      String?
  techStack   JobTech[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tech {
  id          String    @id @default(cuid())
  name        String    @unique
  jobs        JobTech[]
  count       Int       @default(0)
  percentage  Float     @default(0)
  updatedAt   DateTime  @updatedAt
}

model JobTech {
  id      String @id @default(cuid())
  job     Job    @relation(fields: [jobId], references: [id])
  jobId   String
  tech    Tech   @relation(fields: [techId], references: [id])
  techId  String

  @@unique([jobId, techId])
}

model TechCombination {
  id          String   @id @default(cuid())
  tech1       String
  tech2       String
  count       Int      @default(0)
  percentage  Float    @default(0)
  updatedAt   DateTime @updatedAt

  @@unique([tech1, tech2])
}